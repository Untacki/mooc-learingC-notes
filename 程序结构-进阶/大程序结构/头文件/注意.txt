“”还是<>
• #include有两种形式来指出要插入的文件
 • “”要求编译器首先在当前目录（.c文件所在的目录） 寻找这个文件，如果没有，到编译器指定的目录去找 
• <>让编译器只在指定的目录去找 
• 编译器自己知道⾃己的标准库的头文件在哪⾥
 • 环境变量和编译器命令⾏参数也可以指定寻找文件的目录

·头文件有定义函数的声明，若未调用头文件，则编译时编译器会猜测调用函数。调用头文件，则会对函数进行检查。
·而现代编译器例如devc++即使不调用相关头文件，也会默认引入标准库
·若参数类型不匹配，则可能会出现编译正确运行错误的情况。



#include的误区
• #include不是⽤用来引⼊入库的
 • stdio.h⾥里只有printf的原型，printf的代码在另外的地 ⽅方，某个.lib(Windows)或.a(Unix)中 
• 现在的C语⾔言编译器默认会引⼊入所有的标准库 
• #include <stdio.h>只是为了让编译器知道printf函数 的原型，保证你调⽤用时给出的参数值是正确的类型


不对外公开的函数
• 在函数前⾯面加上static就使得它成为只能在所在的编 译单元中被使⽤用的函数 
• 在全局变量前⾯面加上static就使得它成为只能在所在 的编译单元中被使⽤用的全局变量

